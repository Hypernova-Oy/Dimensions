% layout 'default';
% title 'Editor';
<link rel="stylesheet" type="text/css" href="/css/datatables.min.css"></link>
<style type="text/css">
td.product-dimensions {
  font-size:10px;
}
td > div {
  display:flex;
  justify-content: space-between;
}
button.editor_refresh {
  margin:5px 0;
}
</style>
<h2>Editor</h2>
<div class="container-fluid">
<button class="editor_refresh btn btn-warning">Refresh (maintains pagination)</button>
<table id="dimensions" class="table table-striped table-bordered" style="width:100%">
  <thead>
    <tr>
      <th>Date</th>
      <th>Description</th>
      <th>Amount (€)</th>
      <th>Product dimensions complete (%)</th>
      <th>User dimensions complete (%)</th>
      <th>Actions</th>
    </tr>
  </thead>
  <tfoot>
    <tr>
      <th>Date</th>
      <th>Description</th>
      <th>Amount (€)</th>
      <th>Product dimensions complete (%)</th>
      <th>User dimensions complete (%)</th>
      <th>Actions</th>
    </tr>
  </tfoot>
</table>
<button class="editor_refresh btn btn-warning">Refresh (maintains pagination)</button>

</div>
<script type="text/javascript" src="/js/jquery.min.js"></script>
<script type="text/javascript" src="/js/datatables.min.js"></script>
<script type="text/javascript">
/* <![CDATA[ */
$(document).ready(function() {
    $.ajax({
      url: "/api/products",
      dataType: "json",
      beforeSend: function (req) {
        addAuthenticationHeaders(req);
      },
    }).done(function(d) {
        for (var i=0; i<d.records.length;i++) {
            products[d.records[i].id] = d.records[i].name;
        }
    }).fail(function(data) {
      alert("failed: " + JSON.stringify(data));
    });
    $.ajax({
      url: "/api/users",
      dataType: "json",
      beforeSend: function (req) {
        addAuthenticationHeaders(req);
      },
    }).done(function(d) {
        for (var i=0; i<d.records.length;i++) {
            users[d.records[i].id] = d.records[i].username;
        }
    }).fail(function(data) {
      alert("failed: " + JSON.stringify(data));
    });
    var table = $('#dimensions').DataTable( {
        "ajax": {
          url: "/api/gui/editor/datatable/content",
          beforeSend: function (req) {
            addAuthenticationHeaders(req);
          }
        },
        "columns": [
            { "data": "date" },
            { "data": "description" },
            { "data": "amount" },
            { "data": "product_dim_complete" },
            { "data": "user_dim_complete" },
            {
                data: null,
                className:      'center',
                defaultContent: '<button class="editor_edit btn btn-primary">Expand</button>'
            }
        ],
        "buttons": [ 'copy', 'excel', 'pdf', 'colvis' ]
    } );

    // Add event listener for opening and closing details
    $('#dimensions tbody').on('click', 'button.editor_edit', function (e) {
        var tr = $(this).closest('tr');
        var row = table.row( tr );

        if ( row.child.isShown() ) {
            // This row is already open - close it
            row.child.hide();
            tr.removeClass('shown');
        }
        else {
            // Open this row
            row.child( format_dimensions(row.data()) ).show();
            tr.addClass('shown');
        }
    } );

    // Add event listener for refreshing table
    $('body').on('click', 'button.editor_refresh', function (e) {
        table.ajax.reload(null,false);
    } );

    // Add event listener for max button
    $('#dimensions tbody').on('click', 'button.dimension-percentage', function (e) {
        var el = $(this);
        var percentage = el.prevAll('input').first().val();
        var input = el.prevAll('input').eq(1);
        if (!percentage) percentage=0;
        else
          input.val((parseFloat(table.row(el.closest('table').closest('tr').prev()).data().amount)*(parseFloat(percentage)/100)).toFixed(2));
    });

    // Add event listener for save button
    $('#dimensions tbody').on('click', 'button.dimension-save', function (e) {
        var el = $(this);
        var dimension_type = el.attr('data-dimension-type');
        var account_entry_id = el.attr('data-account-entry-id');
        var input = el.parent().prev().children(':first');
        var method = 'POST';
        var endpoint = '/api';
        var req = {
          'account_entry_id': account_entry_id,
          'amount': input.val()
        };

        if (dimension_type === 'product') {
            req.product_id = el.attr('data-product-id');
            var product_dimension_id = el.attr('data-product-dimension-id');
            endpoint += '/account/entries/product/dimensions';
            if (product_dimension_id !== 'new') {
                endpoint += '/'+product_dimension_id;
                method = 'PUT';
            }
        } else if (dimension_type === 'user') {
            req.user_id = el.attr('data-user-id');
            var user_dimension_id = el.attr('data-user-dimension-id');
            endpoint += '/account/entries/user/dimensions';
            if (user_dimension_id !== 'new') {
                endpoint += '/'+user_dimension_id;
                method = 'PUT';
            }
        }

        var request = $.ajax({
          url: endpoint,
          method: method,
          beforeSend: function (req) {
            addAuthenticationHeaders(req);
          },
          data: JSON.stringify(req),
          contentType: 'application/json',
          dataType: 'json'
        }).done(function(res) {
          if (dimension_type === 'product') {
            el.attr('data-product-dimension-id', res.id);
          } else if (dimension_type === 'user') {
            el.attr('data-user-dimension-id', res.id);
          }
          el.addClass("btn-success");
          setInterval(function(){ el.removeClass("btn-success"); }, 1500);
          el.css("box-shadow", "0 0 0 .2rem #0c0");
        }).fail(function(res) {
          alert(JSON.stringify(res));
          el.addClass("btn-danger");
          setInterval(function(){ el.removeClass("btn-danger"); }, 1500);
          el.css("box-shadow", "0 0 0 .2rem #c00");
        });
    });
} );

var products = {};
var users = {};

function format_dimensions ( d ) {
    // `d` is the original data object for the row

    var dimensions = '<div class="container">';

    // products table
    dimensions += '<div class="table-responsive"><table class="table">'+
            '<thead>'+
            '<tr class="table-warning">'+
              '<th>Product</th>'+
              '<th>Amount</th>'+
              '<th>Actions</th>'+
            '</tr>'+
            '</thead>'+
            '<tbody>';

    for (var i=0; i<d.product.length;i++) {
      var amount = d.product[i].amount;
      var product_id = d.product[i].product_id;
        dimensions += '<tr>'+
          '<td>'+
          '<label for="entry-'+d.account_entry_id+'-product-dim">'+products[product_id]+'</label>'+
          '</td>'+
          '<td>'+
          '<input type="number" class="share" size="7" value="'+(($.isNumeric(amount))?amount:"0.00")+'" /><br />'+
          '<input type="number" class="percentage" size="5" value="" /> %'+
          '<button class="dimension-percentage btn btn-danger">Set</button>'+
          '</td>'+
          '<td>'+
          '<button class="dimension-save btn btn-secondary" data-dimension-type="product" data-account-entry-id="'+d.account_entry_id+'" data-product-id="'+product_id+'" data-product-dimension-id="'+(($.isNumeric(d.product[i].id))?d.product[i].id:"new")+'">Save</button>'+
          '</td>'+
          '</tr>';
    }

    dimensions += '</tbody>'+
            '<tfoot>'+
            '<tr class="table-warning">'+
              '<th>Product</th>'+
              '<th>Amount</th>'+
              '<th>Actions</th>'+
            '</tr>'+
            '</tfoot>'+
          '</table></div>';

    // users table
    dimensions += '<div class="table-responsive"><table class="table">'+
            '<thead>'+
            '<tr class="table-info">'+
              '<th>User</th>'+
              '<th>Amount</th>'+
              '<th>Actions</th>'+
            '</tr>'+
            '</thead>'+
            '<tbody>';

    for (var i=0; i<d.user.length;i++) {
      var amount = d.user[i].amount;
      var user_id = d.user[i].user_id;
        dimensions += '<tr>'+
          '<td>'+
          '<label for="entry-'+d.account_entry_id+'-user-dim">'+users[user_id]+'</label>'+
          '</td>'+
          '<td>'+
          '<input type="number" size="7" value="'+(($.isNumeric(amount))?amount:"0.00")+'" /><br />'+
          '<input type="number" size="5" value="" /> %'+
          '<button class="dimension-percentage btn btn-danger">Set</button>'+
          '</td>'+
          '<td>'+
          '<button class="dimension-save btn btn-secondary" data-dimension-type="user" data-account-entry-id="'+d.account_entry_id+'" data-user-id="'+user_id+'" data-user-dimension-id="'+(($.isNumeric(d.user[i].id))?d.user[i].id:"new")+'">Save</button>'+
          '</td>'+
          '</tr>';
    }

    dimensions += '</tbody>'+
            '<tfoot>'+
            '<tr class="table-info">'+
              '<th>User</th>'+
              '<th>Amount</th>'+
              '<th>Actions</th>'+
            '</tr>'+
            '</tfoot>'+
          '</table></div>';

    return dimensions;
}
/* ]]> */
</script>
